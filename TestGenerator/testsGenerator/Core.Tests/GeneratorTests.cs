namespace Core.Tests;

public class GeneratorTests
{
    private Dictionary<TestTypesEnum, TestsGenerator> generators =
        new()
        {
            { TestTypesEnum.MSTests, new TestsGenerator(TestTypesEnum.MSTests) },
        };

    private const string currentDir = "../../..";
    private readonly string outputDir = Path.Combine(currentDir, "TestDirectory");

    private  string GetExpectedFileName(string className) => $"Expected{className}Tests";

    [Theory]
    [InlineData(TestTypesEnum.MSTests)]
    public void SimpleFileTest(TestTypesEnum type)
    {
        const string className = "Foo";
        var files = new List<string>()
        {
            Path.Combine(outputDir, $"{className}.cs")
        };

        generators[type].Generate(files, outputDir);
        var generated = File.ReadAllText(Path.Combine(outputDir, GetExpectedFileName(className)));
        generated = FilterTextOfFile(generated);
        foreach(var f in files)
            DeleteAutogeneratedTests(f);

        var expected = File.ReadAllText(Path.Combine(outputDir, GetExpectedFileName(className)));
        expected = FilterTextOfFile(expected);
        Assert.Equal(expected, generated);
    }

    [Theory]
    [InlineData(TestTypesEnum.MSTests)]
    public void ComplexFileTest(TestTypesEnum type)
    {
        const string className = "Boo";
        var files = new List<string>()
        {
            Path.Combine(outputDir, $"{className}.cs")
        };

        generators[type].Generate(files, outputDir);
        var generated = File.ReadAllText(Path.Combine(outputDir, GetExpectedFileName(className)));
        generated = FilterTextOfFile(generated);
        foreach(var f in files)
            DeleteAutogeneratedTests(f);

        var expected = File.ReadAllText(Path.Combine(outputDir, GetExpectedFileName(className)));
        expected = FilterTextOfFile(expected);
        Assert.Equal(expected, generated);
    }

    private string FilterTextOfFile(string text)
    {
        return text.Replace(" ", "").Replace("\r", "").Replace("\n", "");
    }

    private void DeleteAutogeneratedTests(string path)
    {
        File.Delete(path);
    }
}
